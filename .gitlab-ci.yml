# Cache gems in between builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/ruby
    - vendor/jruby


.before_script: &before_script
  - ruby -v
  - bundle config set path 'vendor'
  - bundle install -j 4

.deps_alpine: &deps_alpine
  - apk --update add g++ make sqlite sqlite-dev git

.test: &test
- bundle exec rake test:ci

variables:
  CI: 1
  DATABASE_URL: sqlite3::memory

jruby:
  allow_failure: true
  variables:
    JRUBY_OPTS: --debug
  before_script:
    - apt-get update && apt-get install -y git
    - *before_script
  image: "jruby:9.2.11"
  script:
    - *test
ruby23:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.3-alpine"
  script:
    - *test
ruby24:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.4-alpine"
  only:
    - master
  script:
    - *test
ruby25:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.5-alpine"
  only:
    - master
  script:
    - *test
ruby26:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.6-alpine"
  only:
    - master
  script:
    - *test
ruby27:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.7-alpine"
  script:
    - *test
  artifacts:
    paths:
      - "coverage/"

pages:
  stage: deploy
  image: node:13
  cache:
    paths:
      - node_modules/
  before_script:
    - npm install gitbook-cli -g
    - gitbook fetch 3.2.3
    - gitbook install

  script:
    - gitbook build . public # build to public path
  artifacts:
    paths:
      - public
    expire_in: 1 week
  # only:
  #   - master
