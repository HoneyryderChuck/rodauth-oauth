# Cache gems in between builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/ruby

.before_script: &before_script
  - ruby -v
  - bundle config set path 'vendor'
  - bundle install -j 4

.deps_alpine: &deps_alpine
  - apk --update add g++ make sqlite sqlite-dev git

.test: &test
- bundle exec rake test:ci

variables:
  CI: 1
  DATABASE_URL: "sqlite3::memory:"

jruby:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/jruby
  allow_failure: true
  variables:
    JRUBY_OPTS: --debug
  before_script:
    - apt-get update && apt-get install -y git
    - *before_script
  image: "jruby:9.2.11"
  script:
    - *test
ruby23:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.3-alpine"
  script:
    - *test
ruby24:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.4-alpine"
  only:
    - master
  script:
    - *test
ruby25:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.5-alpine"
  only:
    - master
  script:
    - *test
ruby26:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.6-alpine"
  only:
    - master
  script:
    - *test
ruby27:
  before_script:
    - *deps_alpine
    - *before_script
  image: "ruby:2.7-alpine"
  script:
    - *test
  artifacts:
    paths:
      - "coverage/"

jekyll:
  stage: test
  image: "ruby:2.7-alpine"
  variables:
    JEKYLL_ENV: production
  before_script:
    - *deps_alpine
    - *before_script
  script:
    - bundle exec rake prepare_website
    - cd www
    - bundle config set path '../vendor'
    - bundle install --jobs 4
    - bundle exec jekyll build -d public
  artifacts:
    paths:
      - www/rdoc/
      - www/public/

pages:
  stage: deploy
  dependencies:
    - ruby27
    - jekyll
  script:
    - mv www/public .
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
