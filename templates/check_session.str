<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>#{@page_title}</title>
  </head>
  <body>
    <script type="text/javascript">
      window.addEventListener("message", receiveMessage, false);

      function receiveMessage(e) { // e.data has client_id and session_state
        var client_id = e.data.substr(0, e.data.lastIndexOf(' '));
        var session_state = e.data.substr(e.data.lastIndexOf(' ') + 1);
        var salt = session_state.split('.')[1];

        if (!client_id || !session_state || !salt) {
          postMessage('error', e.origin);
          return;
        }

        #{rodauth.oauth_oidc_user_agent_state_js}

        // get_op_user_agent_state() is an OP defined function
        // that returns the User Agent's login status at the OP.
        // How it is done is entirely up to the OP.
        var opuas = getOpUserAgentState();

        // Here, the session_state is calculated in this particular way,
        // but it is entirely up to the OP how to do it under the
        // requirements defined in this specification.
        var msgBuffer = new TextEncoder('utf-8').encode(client_id + ' ' + e.origin + ' ' + opuas + ' ' + salt);
        crypto.subtle.digest('SHA-256', msgBuffer).then(function(hash) {
          var hashArray = Array.from(new Uint8Array(hash)); // convert buffer to byte array
          var hashHex = hashArray
            .map(function(b) { return b.toString(16).padStart(2, "0"); })
            .join("");
          var ss = hashHex + "." + salt;

          var stat = '';
          if (session_state === ss) {
              stat = 'unchanged';
          } else {
              stat = 'changed';
          }

          e.source.postMessage(stat, e.origin);
        });
      };

      function getOpUserAgentState() {
        var name = "#{rodauth.oauth_oidc_user_agent_state_cookie_key}=";
        var ca = document.cookie.split(';');
        var value = null;
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i].trim();
            if ((c.indexOf(name)) == 0) {
                value = c.substr(name.length);
                break;
            }
        }

        return value;
      }
    </script>
  </body>
</html>
